{"ast":null,"code":"const moneyFormatter = str => {\n  var formato = {\n    minimumFractionDigits: 2,\n    style: 'currency',\n    currency: 'BRL'\n  };\n  return str.toLocaleString('pt-BR', formato);\n};\n\nconst moneyFormatterWithoutRS = str => {\n  var formato = {\n    minimumFractionDigits: 2\n  };\n\n  if (str) {\n    return str.toLocaleString('pt-BR', formato);\n  }\n\n  return '-';\n};\n\nconst formatDate = date => {\n  if (!date) {\n    return '-';\n  }\n\n  const dateConverted = new Date(date);\n  return dateConverted.toLocaleDateString('pt-BR', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  });\n};\n\nconst formatDateWithHours = date => {\n  if (!date) {\n    return '-';\n  }\n\n  const dateConverted = new Date(date);\n  return dateConverted.toLocaleTimeString('pt-BR', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\nconst stringToDate = str => {\n  const dataDividida = str.split('/');\n  const dataFormatadaFinal = new Date(parseInt(dataDividida[2]), parseInt(dataDividida[1]) - 1, parseInt(dataDividida[0]));\n  return dataFormatadaFinal;\n};\n\nconst slugify = str => {\n  var map = {\n    a: 'á|à|ã|â|À|Á|Ã|Â',\n    e: 'é|è|ê|É|È|Ê',\n    i: 'í|ì|î|Í|Ì|Î',\n    o: 'ó|ò|ô|õ|Ó|Ò|Ô|Õ',\n    u: 'ú|ù|û|ü|Ú|Ù|Û|Ü',\n    c: 'ç|Ç',\n    n: 'ñ|Ñ'\n  };\n\n  for (var pattern in map) {\n    str = str.replace(new RegExp(map[pattern], 'g'), pattern);\n  }\n\n  return str;\n};\n\nconst formatTagsToString = array => {\n  let str = '';\n\n  for (const i in array) {\n    str += Number(i) === 0 ? array[i] : `, ${array[i]}`;\n  }\n\n  ;\n  return str;\n};\n\nconst formatTagsToArrray = tags => {\n  const tagsArray = tags.split(',');\n  const formatedTags = tagsArray.map(tag => tag.trim());\n  return formatedTags;\n};\n\nexport default {\n  moneyFormatter,\n  moneyFormatterWithoutRS,\n  formatDate,\n  slugify,\n  stringToDate,\n  formatDateWithHours,\n  formatTagsToString,\n  formatTagsToArrray\n};","map":{"version":3,"names":["moneyFormatter","str","formato","minimumFractionDigits","style","currency","toLocaleString","moneyFormatterWithoutRS","formatDate","date","dateConverted","Date","toLocaleDateString","year","month","day","formatDateWithHours","toLocaleTimeString","hour","minute","stringToDate","dataDividida","split","dataFormatadaFinal","parseInt","slugify","map","a","e","i","o","u","c","n","pattern","replace","RegExp","formatTagsToString","array","Number","formatTagsToArrray","tags","tagsArray","formatedTags","tag","trim"],"sources":["C:/Users/joao_/MirandaDev/front/src/utils/formatter.js"],"sourcesContent":["const moneyFormatter = str => {\r\n  var formato = {\r\n    minimumFractionDigits: 2,\r\n    style: 'currency',\r\n    currency: 'BRL'\r\n  };\r\n  return str.toLocaleString('pt-BR', formato);\r\n};\r\n\r\nconst moneyFormatterWithoutRS = str => {\r\n  var formato = { minimumFractionDigits: 2 };\r\n  if (str) {\r\n    return str.toLocaleString('pt-BR', formato);\r\n  }\r\n  return '-';\r\n};\r\n\r\nconst formatDate = date => {\r\n  if (!date) {\r\n    return '-';\r\n  }\r\n\r\n  const dateConverted = new Date(date);\r\n  return dateConverted.toLocaleDateString('pt-BR', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit'\r\n  });\r\n};\r\n\r\nconst formatDateWithHours = date => {\r\n  if (!date) {\r\n    return '-';\r\n  }\r\n\r\n  const dateConverted = new Date(date);\r\n  return dateConverted.toLocaleTimeString('pt-BR', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  });\r\n};\r\n\r\nconst stringToDate = str => {\r\n  const dataDividida = str.split('/');\r\n  const dataFormatadaFinal = new Date(\r\n    parseInt(dataDividida[2]),\r\n    parseInt(dataDividida[1]) - 1,\r\n    parseInt(dataDividida[0])\r\n  );\r\n  return dataFormatadaFinal;\r\n};\r\n\r\nconst slugify = str => {\r\n  var map = {\r\n    a: 'á|à|ã|â|À|Á|Ã|Â',\r\n    e: 'é|è|ê|É|È|Ê',\r\n    i: 'í|ì|î|Í|Ì|Î',\r\n    o: 'ó|ò|ô|õ|Ó|Ò|Ô|Õ',\r\n    u: 'ú|ù|û|ü|Ú|Ù|Û|Ü',\r\n    c: 'ç|Ç',\r\n    n: 'ñ|Ñ'\r\n  };\r\n\r\n  for (var pattern in map) {\r\n    str = str.replace(new RegExp(map[pattern], 'g'), pattern);\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\nconst formatTagsToString = array => {\r\n  let str = '';\r\n  for (const i in array) {\r\n    str += Number(i) === 0 ? array[i] : `, ${array[i]}`;\r\n  };\r\n  return str;\r\n};\r\n\r\nconst formatTagsToArrray = (tags) => {\r\n  const tagsArray = tags.split(',');\r\n  const formatedTags = tagsArray.map(tag => tag.trim());\r\n  return formatedTags;\r\n};\r\n\r\nexport default {\r\n  moneyFormatter,\r\n  moneyFormatterWithoutRS,\r\n  formatDate,\r\n  slugify,\r\n  stringToDate,\r\n  formatDateWithHours,\r\n  formatTagsToString,\r\n  formatTagsToArrray\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}